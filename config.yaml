# TriangulateAI Configuration - Geometric Mean Loss

# Image settings
image_size: 256
triangles_n: 100  # Back to 100 triangles

# Model architecture
model:
  encoder_depth: 5
  channels_base: 64
  channels_progression: [64, 128, 256, 512, 512]
  hidden_dim: 512
  fc_hidden_dim: 1024

# Loss configuration for geometric mean
loss:
  type: 'geometric_mean'  # New loss type
  epsilon: 1e-8  # Epsilon for log stability
  min_loss_value: 1e-4  # Minimum loss value for regularization
  regularization_weight: 0.01  # L1 regularization weight
  # VGG layers for perceptual loss
  vgg_layers: ['conv1_2', 'conv2_2', 'conv3_4', 'conv4_4']
  
  # Legacy weights (not used with geometric mean, kept for compatibility)
  alpha: 1.0
  beta: 1.0
  gamma: 1.0

# Optimizer settings
optimizer:
  type: 'AdamW'
  lr: 2e-4  # Moderate learning rate
  betas: [0.9, 0.999]
  weight_decay: 1e-5

# Training settings
training:
  batch_size: 4
  epochs: 100
  save_interval: 10
  warmup_ratio: 0.02  # 2% warmup
  mixed_precision: false
  gradient_clip: 1.0
  device: 'cuda:0'

# Data settings
data:
  train_split: 0.9
  val_split: 0.1
  augmentation:
    random_flip: true
    hsv_jitter: 0.1
  num_workers: 4
  pin_memory: true

# Logging settings
logging:
  wandb_project: 'triangulate_ai'
  wandb_entity: null
  log_interval: 20
  sample_interval: 1

# Paths
paths:
  data_dir: 'data'
  checkpoint_dir: 'checkpoints'
  output_dir: 'outputs'
  lmdb_path: 'data/unsplash-100.lmdb'

# Inference settings
inference:
  batch_size: 1
  device: 'cuda:0'

# Evaluation settings
evaluation:
  metrics: ['lpips', 'ssim', 'psnr']
  batch_size: 8